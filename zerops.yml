# Zerops configuration for Frappe/ERPNext deployment
# Creates managed database services and uses Docker Compose for application containers

# Managed Services have to be executed in Zerops GUI using 'Import services'
services:
    - hostname: mariadb
      # service type and version number in mariadb@{version} format
      type: mariadb@10.6
      # mode of operation "HA"/"NON_HA",
      mode: NON_HA

    - hostname: rediscache
      type: valkey@7.2
      mode: NON_HA  # use HA in production
    
    - hostname: redisqueue
      type: valkey@7.2

      mode: NON_HA  # use HA in production

    - hostname: sharedstorage
      type: shared-storage
      mode: NON_HA

zerops:
  # Frappe/ERPNext Application Services (Docker Compose)
  - setup: erpnext
    build:
      # Build custom ERPNext image with XML Importer
      base: alpine@3.19
      buildCommands:
        # Install Docker and Docker Compose with sudo
        - sudo apk update
        - sudo apk add --no-cache docker docker-compose
        - sudo rc-update add docker boot
        # Add current user to docker group for socket access
        - sudo addgroup $(whoami) docker
        - sudo service docker start || sudo dockerd &
        # Wait for Docker daemon to be ready
        - sleep 5
        # Fix docker socket permissions
        - sudo chmod 666 /var/run/docker.sock
        # Build and push to Docker Hub using Git commit SHA
        - |
          export GIT_SHA=$(git rev-parse --short HEAD)
          echo "Building with Git SHA: $GIT_SHA"
          docker build -f images/herbatica/erpnext/Containerfile -t davidu98/herbatica-erpnext:$GIT_SHA .
          docker tag davidu98/herbatica-erpnext:$GIT_SHA davidu98/herbatica-erpnext:latest
          echo $DOCKERHUB_TOKEN | docker login -u davidu98 --password-stdin
          docker push davidu98/herbatica-erpnext:$GIT_SHA
          docker push davidu98/herbatica-erpnext:latest
      deployFiles: 
        - ./docker-compose.zerops.yaml
      addToRunPrepare: 
        - ./docker-compose.zerops.yaml
    run:
      # Environment variables for Docker Compose services
      envVariables:
        # Image configuration  
        CUSTOM_IMAGE: davidu98/herbatica-erpnext
        CUSTOM_TAG: latest
        
        # Docker Hub authentication
        DOCKERHUB_TOKEN: ${DOCKERHUB_TOKEN}
        ERPNEXT_VERSION: v15.84.0
        PULL_POLICY: always
        RESTART_POLICY: unless-stopped
        
        # Database connection (using Zerops service)
        DB_HOST: ${mariadb_hostname}
        DB_PORT: 3306
        ROOT_USER: ${mariadb_user}
        DB_PASSWORD: ${mariadb_password}

        # Redis connection (using Zerops services) 
        REDIS_CACHE: redis://rediscache:6379
        REDIS_QUEUE: redis://redisqueue:6379

        # Site configuration
        FRAPPE_SITE_NAME_HEADER: ${siteName}
        ADMIN_PASSWORD: ${adminPassword}

        # Nginx/Proxy settings
        UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
        UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
        UPSTREAM_REAL_IP_RECURSIVE: "off"
        PROXY_READ_TIMEOUT: 120
        CLIENT_MAX_BODY_SIZE: 50m
      
      # Basic preparation
      prepareCommands:
        # Pull the custom Docker image
        - docker pull davidu98/herbatica-erpnext:latest
        
        # Prepare shared storage
        - |
          echo "üìÅ Preparing shared storage for Frappe bench..."
          docker compose -f docker-compose.zerops.yaml run --rm configurator bash -c '
            echo "üîß Setting up shared storage for full bench persistence..."
            cd /home/frappe/frappe-bench
            mkdir -p sites apps logs config
            chmod -R 755 .
            echo "‚úÖ Shared storage prepared"
          '

      # Expose HTTP port
      ports:
        - port: 8080
          httpSupport: true

      # Start the application stack with site installation
      start: |
        echo "üöÄ Starting Frappe/ERPNext with automated site installation..."
        echo "================================================================="
        
        # Start Docker Compose services in background
        docker compose -f docker-compose.zerops.yaml up -d
        
        # Wait for services to be ready (configurator will handle setup)
        echo "‚è≥ Waiting for services to start..."
        sleep 15
        
        # Step 1: Check service connections 
        echo "üîç STEP 1: Service Connection Validation"
        
        # Check MariaDB connection
        echo "üóÑÔ∏è  Testing MariaDB connection..."
        if docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend bash -c "
          mysql -h\$DB_HOST -P\$DB_PORT -u\$ROOT_USER -p\$DB_PASSWORD -e 'SELECT 1' > /dev/null 2>&1
        "; then
          echo "‚úÖ MariaDB connection successful"
        else
          echo "‚ùå MariaDB connection failed"
          exit 1
        fi
        
        # Check Redis connections
        echo "üî¥ Testing Redis connections..."
        if docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend bash -c "
          redis-cli -h rediscache -p 6379 ping > /dev/null 2>&1 &&
          redis-cli -h redisqueue -p 6379 ping > /dev/null 2>&1
        "; then
          echo "‚úÖ Redis connections successful"
        else
          echo "‚ùå Redis connection failed"
          exit 1
        fi
        
        # Step 2: Install Frappe site and apps (idempotent)
        echo "üèóÔ∏è STEP 2: Frappe Site Installation (idempotent)"
        
        # Check if site exists
        SITE_EXISTS=$(docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend bash -c '
          cd /home/frappe/frappe-bench 2>/dev/null || exit 1
          if [ -d "sites/$FRAPPE_SITE_NAME_HEADER" ] && bench --site all list-sites 2>/dev/null | grep -q "$FRAPPE_SITE_NAME_HEADER"; then
            echo "EXISTS"
          else
            echo "NOT_EXISTS"
          fi
        ' 2>/dev/null || echo "NOT_EXISTS")
        
        if echo "$SITE_EXISTS" | grep -q "EXISTS"; then
          echo "‚ôªÔ∏è Site '$FRAPPE_SITE_NAME_HEADER' already exists - running migration..."
          docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend \
            bench --site "$FRAPPE_SITE_NAME_HEADER" migrate
          echo "‚úÖ Migration completed"
        else
          echo "üÜï Creating new site: $FRAPPE_SITE_NAME_HEADER"
          
          # Create site with ERPNext and XML Importer in one command
          echo "üì¶ Installing site with ERPNext and XML Importer apps..."
          docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend \
            bench new-site --mariadb-user-host-login-scope=% --db-root-password "$DB_PASSWORD" --install-app erpnext --install-app xml_importer --admin-password "$ADMIN_PASSWORD" "$FRAPPE_SITE_NAME_HEADER"
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Site created successfully with both ERPNext and XML Importer!"
          else
            echo "‚ùå Site creation failed!"
            exit 1
          fi
        fi
        
        # Step 3: Post-installation verification
        echo "‚úÖ STEP 3: Post-Installation Verification"
        
        # Verify site is accessible
        if docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend bash -c "
          bench --site '$FRAPPE_SITE_NAME_HEADER' show-config > /dev/null 2>&1
        "; then
          echo "‚úÖ Site configuration is accessible"
        # else
        #   echo "‚ùå Site configuration check failed"
        #   exit 1
        # fi
        
        # # List installed apps
        # echo "üì¶ Installed apps:"
        # docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend \
        #   bench --site "$FRAPPE_SITE_NAME_HEADER" list-apps
        else
          echo "‚ùå Site configuration check failed"
          exit 1
        fi
        
        # List installed apps
        echo "üì¶ Installed apps:"
        docker compose --project-name herbatica-erpnext -f docker-compose.zerops.yaml exec backend \
          bench --site "$FRAPPE_SITE_NAME_HEADER" list-apps
        
        echo ""
        echo "üéâ Frappe/ERPNext deployment completed successfully!"
        echo "==============================================="
        echo "‚úÖ Site: $FRAPPE_SITE_NAME_HEADER"
        echo "‚úÖ Apps: frappe, erpnext, xml_importer"
        echo "‚úÖ Ready for use!"
        
        # Keep containers running in foreground
        docker compose -f docker-compose.zerops.yaml logs -f

# Installation Process (Inline Commands):
# Prepare Phase:
# - Pull custom Docker image with XML Importer
# - Set up shared storage directory structure
#
# Start Phase:
# 1. Start Docker Compose services
# 2. Validate service connections (MariaDB, Redis)
# 3. Install Frappe site with ERPNext and custom apps (idempotent)
# 4. Verify installation and list installed apps
# 5. Keep containers running
#
# Benefits of managed services:
# - Automatic backups and point-in-time recovery
# - Built-in monitoring and alerting
# - Automatic security updates
# - High availability and failover
# - Performance optimization
# - No container overhead for databases